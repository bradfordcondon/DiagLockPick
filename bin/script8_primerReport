#8-16-16
#Script written to check primer sequences against all genomes
#And generate a report based on mismatches
#
#
use strict;
use warnings;
use Getopt::Long;
use Data::Dumper;  #for debugging
use Bio::SearchIO;
use File::Basename;


my $usage = "$0 -i primer FASTA sequences\n"; 

my $input_file;
my %hitTracker;
my $reportwd = '/Users/chet/uky/DiagLockPickFinal/individualLocusAnalysis9-13-16/primerReports';

#read user options
GetOptions(
	"i=s"	=> \$input_file,
);

 if(!$input_file ) {
	 print "no input file specified\n";
	 die;
	 		}
###
###generate primer reports
###

##list blast databases
my $wd = '/Users/chet/uky/blast_dbs/';
 my @files = <$wd*.fasta>;

# foreach my $file (@files) {   ##for each blast database	
# 	my $filehandle = basename($file);

# system("blastn -query $input_file -db $file -max_target_seqs 1 -outfmt '6 qseqid sseqid qlen length pident qstart qend sstart send' -task blastn-short > $reportwd/$filehandle.blast")

# }

###
###read in blast reports
###
 @files = <$reportwd/*.blast>;

foreach my $file (@files) {   ##for each blast database	
	open (my $fh, "<", $file)
	  	  or die "couldn't open '$file' $!"; 
		while (<$fh>){
	chomp;
	my @split = split(/\t/);
	my $qseqid = $split[0];
	my $sseqid = $split[1];
	my $qlen = $split[2];
	my $hlen = $split[3];
	my $pcov = $hlen/$qlen*100;
	my $pident = $split[4];
$hitTracker{$qseqid}{$file}{"identity"} = $pident;
$hitTracker{$qseqid}{$file}{"cov"} = $pcov;
	}
}

##Generate report.
foreach my $primer (sort keys %hitTracker) {   
 	 	my $primerCounterPerfect = 0;
 	 	my $primerCounter = 0;
	   		foreach my $db (sort keys $hitTracker{$primer}) {	
	   				    	my $pident = $hitTracker{$primer}{$db}{"identity"};
	   				    	my $pcoverage = $hitTracker{$primer}{$db}{"cov"};
	   				    	if ($pident == 100 && $pcoverage >= 95) {
	   				    		$primerCounterPerfect++;
	   				    	}
	   				    	$primerCounter++;
	   		}

print "$primer\t$primerCounterPerfect\t$primerCounter\n";
}
					   	     							 		

											
